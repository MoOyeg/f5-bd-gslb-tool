- hosts: localhost
  gather_facts: no
  vars_files:
    # - "vars/credentials.yaml"
    - "vars/setup.yaml"
    #- "vars/gslbState.desired.yaml"
  pre_tasks:
    - name: Create AWS credentials
      ansible.builtin.shell: "aws configure set aws_access_key_id {{AWS_ACCESS_KEY_ID}} --profile test"

    - name: Create AWS credentials
      ansible.builtin.shell: "aws configure set aws_secret_access_key {{AWS_SECRET_ACCESS_KEY}} --profile test"

    - name: Create AWS credentials
      ansible.builtin.shell: "aws configure set region us-east-1 --profile test"

    - name: Test AWS Credentials
      ansible.builtin.shell: "aws ec2 describe-regions --profile test"

    - name: Get EKS,AKS,GKS clusters from list
      set_fact:
        target_other_clusters: "{{ target_clusters | select('match', '^(eks|aks|gks).*') | list }}"

    - name: Create Kubeconfig
      ansible.builtin.shell: "aws eks --region us-east-1 update-kubeconfig --name {{item}} --profile test"
      loop: "{{target_other_clusters}}"

    - name: kubectl get information
      ansible.builtin.shell: "KUBECONTEXT=$(kubectl config get-contexts | grep -i {{item}}| awk '{print $2}') && kubectl config rename-context $KUBECONTEXT {{item}}"
      loop: "{{target_other_clusters}}"

    - name: kubectl debug
      ansible.builtin.shell: "kubectl config get-contexts"
      register: get_contexts

    - debug: msg="{{get_contexts}}"

    - name: kubectl get hostname
      ansible.builtin.shell: "kubectl config use-context {{item}} &1> /dev/null && kubectl get svc/pacman -o json -n pacman-app | jq '.status.loadBalancer.ingress[0].hostname'"
      register: hostname
      with_items: "{{target_other_clusters}}"

    - debug: msg="{{hostname.results}}"
